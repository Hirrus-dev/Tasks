version: '3.1'

services:

  consul-1:
    image: consul:latest
    container_name: consul-1
    restart: unless-stopped
    ports:
      - 8300:8300
      - 8301:8301
      - 8400:8400
      - 8500:8500
      - 8600:8600
      - 8600:8600/udp
    command: "agent -server -bootstrap-expect 1 -ui -client 0.0.0.0"

  consul-agent-1:
    image: consul:latest
    container_name: consul-agent-1
    restart: unless-stopped
    command: "agent -retry-join=consul-1 -client 0.0.0.0"

  consul-agent-2:
    image: consul:latest
    container_name: consul-agent-2
    restart: unless-stopped
    command: "agent -retry-join=consul-1 -client 0.0.0.0"

  db-1:
    build:
      context: ./postgresql/master
      dockerfile: Dockerfile
    container_name: db-1    
    restart: always
    environment:
      POSTGRES_PASSWORD: examplepass
      POSTGRES_USER: exampleuser
      POSTGRES_DB: exampledb
      PG_REP_USER: replicator
      PG_REP_PASSWORD: repl123
    volumes:
      - db:/var/lib/postgresql/data

  db-2:
    build:
      context: ./postgresql/slave
      dockerfile: Dockerfile
    container_name: db-2    
    restart: always
    environment:
      POSTGRES_PASSWORD: examplepass
      POSTGRES_USER: exampleuser
      POSTGRES_DB: exampledb
      PG_REP_USER: replicator
      PG_REP_PASSWORD: repl123
#      PG_MASTER_HOST: db-1
    depends_on:
      - db-1

  haproxy:
    build:
      context: ./haproxy
      dockerfile: Dockerfile
    container_name: haproxy
    restart: always
    ports:
      - 5000:5000
      - 7000:7000

  wordpress:
    build:
      context: ./wordpress
      dockerfile: wordpress.dockerfile
    container_name: wordpress
    restart: always
    environment:
      WORDPRESS_DB_HOST: haproxy:5000
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb
    volumes:
      - wordpress:/var/www/html

  web-1:
    image: nginx:alpine
    container_name: web-1
    restart: always
    ports:
      - 9080:80
    volumes:
      - ./wordpress.conf:/etc/nginx/conf.d/default.conf:ro
      - wordpress:/var/www/html
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    labels:
      - traefik.enable=true
      - traefik.backend=web-1
      - traefik.domain=docker.localhost
      - traefik.http.routers.web-1.rule=Host(`web.docker.localhost`)
      - traefik.http.services.myservice.loadbalancer.healthcheck.interval=10s
      - traefik.http.services.myservice.loadbalancer.healthcheck.path=/
      - traefik.http.services.myservice.loadbalancer.healthcheck.timeout=1s

  web-2:
    image: nginx:alpine
    container_name: web-2
    restart: always
    ports:
      - 9081:80
    volumes:
      - ./wordpress.conf:/etc/nginx/conf.d/default.conf:ro
      - wordpress:/var/www/html
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
    labels:
      - traefik.enable=true
      - traefik.backend=web-2
      - traefik.domain=docker.localhost
      - traefik.http.routers.web-2.rule=Host(`web.docker.localhost`)
      - traefik.http.services.myservice.loadbalancer.healthcheck.interval=10s
      - traefik.http.services.myservice.loadbalancer.healthcheck.path=/
      - traefik.http.services.myservice.loadbalancer.healthcheck.timeout=1s

  cache-1:
    build:
      context: ./redis/master
      dockerfile: redis.dockerfile
    container_name: cache-1

  cache-2:
    build:
      context: ./redis/slave
      dockerfile: redis-slave.dockerfile
    container_name: cache-2

  proxy:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443 
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro

#  etcd-1:
#    image: quay.io/coreos/etcd:v2.3.8
#    container_name: etcd-1
#    restart: unless-stopped
#    ports:
#      - 2379:2379
#      - 2380:2380
#      - 4001:4001
#    command: "-name etcd-1 -advertise-client-urls http://etcd-1:2379,http://etcd-1:4001 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls http://etcd-1:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380 -initial-cluster-state new"
  
#  etcd-2:
#    image: quay.io/coreos/etcd:v2.3.8
#    container_name: etcd-2
#    restart: unless-stopped
#    ports:
#      - 2379:2379
#      - 2380:2380
#      - 4001:4001
#    command: "-name etcd-2 -advertise-client-urls http://etcd-2:2379,http://etcd-2:4001 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls http://etcd-2:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380 -initial-cluster-state new"
  
#  etcd-3:
#    image: quay.io/coreos/etcd:v2.3.8
#    container_name: etcd-3
#    restart: unless-stopped
#    ports:
#      - 2379:2379
#      - 2380:2380
#      - 4001:4001
#    command: "-name etcd-3 -advertise-client-urls http://etcd-3:2379,http://etcd-3:4001 -listen-client-urls http://0.0.0.0:2379,http://0.0.0.0:4001 -initial-advertise-peer-urls http://etcd-3:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token etcd-cluster-1 -initial-cluster etcd-1=http://etcd-1:2380,etcd-2=http://etcd-2:2380,etcd-3=http://etcd-3:2380 -initial-cluster-state new"
  
  
#  consul-2:
#    image: consul:latest
#    container_name: consul-2
#    restart: unless-stopped
#    ports:
#      - 8302:8302
#      - 8501:8500
#    command: "agent -server -retry-join 192.168.12.202 -ui -client 0.0.0.0 -advertise 192.168.12.202 -serf-lan-port 8302"

#  consul-3:
#    image: consul:latest
#    container_name: consul-3
#    restart: unless-stopped
#    ports:
#      - 8303:8303
#      - 8502:8500
#    command: "agent -server -retry-join consul-1 -ui -client 0.0.0.0 -advertise 192.168.12.202 -serf-lan-port 8303"


volumes:
  wordpress:
  db: